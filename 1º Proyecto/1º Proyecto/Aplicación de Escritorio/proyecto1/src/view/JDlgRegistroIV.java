/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.InstanciaEvaluacion;
import model.sql.EvaluacionGrupo;
import model.sql.Miembro;

/**
 *
 * @author KEDAC
 */
public class JDlgRegistroIV extends javax.swing.JDialog {

    DefaultTableModel tablaInstancias;
    private ArrayList<InstanciaEvaluacion> instanciasNotas;
    private String codigoGrupo;
    private String evaluacion;
    private String estudiante;

    /**
     * Creates new form JDlgRegistrarIV
     */
    public JDlgRegistroIV(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tablaInstancias = new DefaultTableModel();
        tablaInstancias.addColumn("Descripción");
        tablaInstancias.addColumn("Fecha");
        tablaInstancias.addColumn("Nota");
        this.jTblInstancias.setModel(tablaInstancias);
        setIconImage(new ImageIcon(getClass().getResource("/view/source/favicon.ico")).getImage());
        ((JPanel) getContentPane()).setOpaque(false);
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/view/source/fondo.jpg"));
        JLabel fondo = new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0, 0, uno.getIconWidth(), uno.getIconHeight());
    }

    public void setCodigoGrupo(String pCodigo) throws SQLException {
        this.codigoGrupo = pCodigo;
    }

    public void setEvaluacion(String pEvaluacion) throws SQLException {
        this.evaluacion = pEvaluacion;
    }

    public void setEstudiante(String pEstudiante) throws SQLException {
        this.estudiante = pEstudiante;
    }

    public void cargarInstancias() throws SQLException {
        this.instanciasNotas = new ArrayList<>();
        ArrayList<String> temporal = EvaluacionGrupo.getInstance().instanciasEvaluacionMiembroGrupo(evaluacion, codigoGrupo, estudiante);
        for (int i = 0; i < temporal.size(); i += 4) {
            InstanciaEvaluacion IE = new InstanciaEvaluacion(temporal.get(i), temporal.get(i + 3), Float.parseFloat(temporal.get(i + 2)));
            this.instanciasNotas.add(IE);
        }
    }

    public void cargarTablaInstancias() throws SQLException {
        for (InstanciaEvaluacion instancia : instanciasNotas) {
            String[] informacion = new String[3];
            informacion[0] = instancia.getDescripcion();
            informacion[1] = instancia.getFecha();
            informacion[2] = instancia.getNota() + "";
            this.tablaInstancias.addRow(informacion);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTxtNota = new javax.swing.JTextField();
        jBtnAgregarInstancia = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TxtDescripcion = new javax.swing.JTextField();
        TxtFecha = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblInstancias = new javax.swing.JTable();
        jBtnRegistrarNota = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Nota - Instancia Variable -");

        jBtnAgregarInstancia.setText("Finalizar Registro");
        jBtnAgregarInstancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarInstanciaActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Descripción:");

        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Fecha:");

        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Nota:");

        TxtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtDescripcionActionPerformed(evt);
            }
        });

        jTblInstancias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTblInstancias.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(jTblInstancias);

        jBtnRegistrarNota.setText("Registrar Nota");
        jBtnRegistrarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRegistrarNotaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtDescripcion)
                            .addComponent(TxtFecha)
                            .addComponent(jTxtNota, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))))
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtnRegistrarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnAgregarInstancia, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TxtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TxtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnRegistrarNota)
                .addGap(7, 7, 7)
                .addComponent(jBtnAgregarInstancia)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAgregarInstanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarInstanciaActionPerformed
        for (int i = 0; i < this.instanciasNotas.size(); i++) {
            try {
                boolean existe = false;
                ArrayList<String> temporal = EvaluacionGrupo.getInstance().instanciasEvaluacion(evaluacion, codigoGrupo);
                for (int j = 0; j < temporal.size(); j += 2) {
                    if (temporal.get(j).equals(instanciasNotas.get(i).getDescripcion())) {
                        existe = true;
                    }
                }
                if (!existe) {
                    EvaluacionGrupo.getInstance().insertarInstancia(this.codigoGrupo, this.evaluacion, 0, instanciasNotas.get(i).getDescripcion(), instanciasNotas.get(i).getFecha());
                    ArrayList<String> miembros = Miembro.getInstance().miembrosGrupo(this.codigoGrupo);
                    for (String miembro : miembros) {
                        EvaluacionGrupo.getInstance().inicializarNotas(miembro, codigoGrupo, this.evaluacion);
                    }
                    EvaluacionGrupo.getInstance().aumentarCantidadInstancias(codigoGrupo, evaluacion);
                }
                Miembro.getInstance().actualizarNota(codigoGrupo, estudiante, evaluacion, instanciasNotas.get(i).getDescripcion(), Float.parseFloat(this.tablaInstancias.getValueAt(i, 2).toString()));                
                this.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(JDlgRegistroIF.class.getName()).log(Level.SEVERE, null, ex);
            }       
        }  
        Miembro.getInstance().actualizarNotaAcumulada(estudiante, codigoGrupo);                 
    }//GEN-LAST:event_jBtnAgregarInstanciaActionPerformed

    private void TxtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtDescripcionActionPerformed

    private void jBtnRegistrarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRegistrarNotaActionPerformed
        if (!this.TxtDescripcion.getText().isEmpty()
                && !this.TxtFecha.getText().isEmpty()
                && !this.jTxtNota.getText().isEmpty()) {
            try {
                float nota = Float.parseFloat(this.jTxtNota.getText());
                if (nota >= 0 && nota <= 100) {
                    boolean existe = false;
                    for (InstanciaEvaluacion instancia : instanciasNotas) {
                        if (instancia.getDescripcion().equals(this.TxtDescripcion.getText())) {
                            existe = true;
                        }
                    }
                    if (!existe) {
                        InstanciaEvaluacion instanciaE = new InstanciaEvaluacion(this.TxtDescripcion.getText(), this.TxtFecha.getText(), nota);
                        instanciasNotas.add(instanciaE);
                        String[] informacion = new String[3];
                        informacion[0] = instanciaE.getDescripcion();
                        informacion[1] = instanciaE.getFecha();
                        informacion[2] = instanciaE.getNota() + "";
                        this.tablaInstancias.addRow(informacion);
                    } else {
                        for (InstanciaEvaluacion instanciasNota : this.instanciasNotas) {
                            if (instanciasNota.getDescripcion().equals(this.TxtDescripcion.getText())) {
                                instanciasNota.setValor(nota);
                            }
                        }
                        for (int i = 0; i < this.instanciasNotas.size(); i++) {
                            if (this.tablaInstancias.getValueAt(i, 0).equals(this.TxtDescripcion.getText())) {
                                this.tablaInstancias.setValueAt(this.instanciasNotas.get(i).getValor(), i, 2);
                            }
                        }
                    }
                    this.TxtDescripcion.setText("");
                    this.TxtFecha.setText("");
                    this.jTxtNota.setText("");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Nota inválida!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Nota inválida!");
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Falta información!");
        }
    }//GEN-LAST:event_jBtnRegistrarNotaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDlgRegistroIV dialog = new JDlgRegistroIV(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtDescripcion;
    private javax.swing.JTextField TxtFecha;
    private javax.swing.JButton jBtnAgregarInstancia;
    private javax.swing.JButton jBtnRegistrarNota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTblInstancias;
    private javax.swing.JTextField jTxtNota;
    // End of variables declaration//GEN-END:variables
}
