/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.InstanciaEvaluacion;
import model.sql.EvaluacionGrupo;
import model.sql.Miembro;

/**
 *
 * @author KEDAC
 */
public class JDlgRegistroIF extends javax.swing.JDialog {

    DefaultTableModel tablaInstancias;
    DefaultComboBoxModel modelInstancias;
    private ArrayList<String> instancias;
    private ArrayList<InstanciaEvaluacion> instanciasNotas;
    private String codigoGrupo;
    private String evaluacion;
    private String estudiante;
    /**
     * Creates new form JDlgRegistroEF
     */
    public JDlgRegistroIF(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tablaInstancias = new DefaultTableModel();
        tablaInstancias.addColumn("Descripci칩n");
        tablaInstancias.addColumn("Fecha");           
        tablaInstancias.addColumn("Valor");   
        tablaInstancias.addColumn("Nota");   
        this.jTblInstancias.setModel(tablaInstancias);
        setIconImage(new ImageIcon(getClass().getResource("/view/source/favicon.ico")).getImage());
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/view/source/fondo.jpg"));
        JLabel fondo = new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo,JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0,0,uno.getIconWidth(),uno.getIconHeight()); 
    }
    
    public void setCodigoGrupo(String pCodigo) throws SQLException {
        this.codigoGrupo = pCodigo;
    }    
    
    public void setEvaluacion(String pEvaluacion) throws SQLException {
        this.evaluacion = pEvaluacion;
    }    
    
    public void setEstudiante(String pEstudiante) throws SQLException {
        this.estudiante = pEstudiante;
    }      
    
    public void cargarInstancias() throws SQLException {
        this.instanciasNotas = new ArrayList<>();
        this.instancias = EvaluacionGrupo.getInstance().instanciasEvaluacion(evaluacion, codigoGrupo);
        ArrayList<String> temporal = EvaluacionGrupo.getInstance().instanciasEvaluacionMiembroGrupo(evaluacion, codigoGrupo, estudiante);
        for (int i = 0; i < temporal.size(); i += 4) {
            InstanciaEvaluacion IE = new InstanciaEvaluacion(Float.parseFloat(temporal.get(i + 1)), temporal.get(i), Float.parseFloat(temporal.get(i + 2)), temporal.get(i + 3));
            this.instanciasNotas.add(IE);
        } 
    }
    
    public void cargarComboBoxInstancias() throws SQLException {        
        modelInstancias = new DefaultComboBoxModel();
        this.modelInstancias.addElement(""); 
        for (int i = 0; i < instancias.size(); i += 2) {
            modelInstancias.addElement(instancias.get(i));
        }
        this.jCBInstancias.setModel(modelInstancias);
    }
    
    public void cargarTablaInstancias() throws SQLException { 
        for (InstanciaEvaluacion instancia : instanciasNotas) { 
            String[] informacion = new String[4];
            informacion[0] = instancia.getDescripcion();
            informacion[1] = instancia.getFecha();
            informacion[2] = instancia.getValor() + "%";
            informacion[3] = instancia.getNota() + "";
            this.tablaInstancias.addRow(informacion);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBInstancias = new javax.swing.JComboBox();
        jTxtNota = new javax.swing.JTextField();
        jBtnRegistraNota = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblInstancias = new javax.swing.JTable();
        jBtnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Nota - Instancia Fija -");
        setResizable(false);

        jCBInstancias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jBtnRegistraNota.setText("Registrar Nota");
        jBtnRegistraNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRegistraNotaActionPerformed(evt);
            }
        });

        jTblInstancias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTblInstancias.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(jTblInstancias);

        jBtnAceptar.setText("Finalizar Registro");
        jBtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCBInstancias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTxtNota)
                    .addComponent(jBtnRegistraNota, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(jBtnAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCBInstancias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTxtNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtnRegistraNota)
                .addGap(18, 18, 18)
                .addComponent(jBtnAceptar)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnRegistraNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRegistraNotaActionPerformed
        if (!this.jTxtNota.getText().isEmpty() && this.jCBInstancias.getSelectedIndex() != 0) {
            try {
                float nota = Float.parseFloat(this.jTxtNota.getText());
                if (nota >= 0 && nota <= 100) {
                    for (InstanciaEvaluacion instanciasNota : this.instanciasNotas) {
                        if (instanciasNota.getDescripcion().equals(this.jCBInstancias.getSelectedItem().toString())) {
                            instanciasNota.setValor(nota);
                        }
                    }                     
                    for (int i = 0; i < this.instanciasNotas.size(); i++) {
                        if (this.tablaInstancias.getValueAt(i, 0).equals(this.jCBInstancias.getSelectedItem().toString())) {   
                            this.tablaInstancias.setValueAt(this.instanciasNotas.get(i).getValor(), i, 3);
                        }
                    }                    
                    this.jCBInstancias.setSelectedIndex(0);
                    this.jTxtNota.setText(""); 
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Nota inv치lida!");                    
                }
            } 
            catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Nota inv치lida!");    
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Falta informaci칩n!");
        } 
    }//GEN-LAST:event_jBtnRegistraNotaActionPerformed

    private void jBtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarActionPerformed
        for (int i = 0; i < this.instanciasNotas.size(); i++) {                     
            try {
                Miembro.getInstance().actualizarNota(codigoGrupo, estudiante, evaluacion, instanciasNotas.get(i).getDescripcion(), Float.parseFloat(this.tablaInstancias.getValueAt(i, 3).toString()));
                this.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(JDlgRegistroIF.class.getName()).log(Level.SEVERE, null, ex);
            }   
        } 
        Miembro.getInstance().actualizarNotaAcumulada(estudiante, codigoGrupo);      
    }//GEN-LAST:event_jBtnAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDlgRegistroIF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDlgRegistroIF dialog = new JDlgRegistroIF(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAceptar;
    private javax.swing.JButton jBtnRegistraNota;
    private javax.swing.JComboBox jCBInstancias;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblInstancias;
    private javax.swing.JTextField jTxtNota;
    // End of variables declaration//GEN-END:variables
}
